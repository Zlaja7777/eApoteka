// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp_Apoteka.Entity_Framework;

namespace WebApp_Apoteka.Migrations
{
    [DbContext(typeof(MojDbContext))]
    partial class MojDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Apoteka.Models.Apotekar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumZaposlenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JMBG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MjestoRodjenjaID")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MjestoRodjenjaID");

                    b.ToTable("Apotekar");
                });

            modelBuilder.Entity("Apoteka.Models.Opstina", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Opstina");
                });

            modelBuilder.Entity("WebApp_Apoteka.Models.Lijek", b =>
                {
                    b.Property<int>("LijekID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumProizvodnje")
                        .HasColumnType("datetime2");

                    b.Property<string>("FarmaceutskiOblik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternacionalniGenerickiNaziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KvalitativniIKvantitativniSastav")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NacinPrimjene")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazivLijeka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazivProizvodjaca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RokTrajanjaMjeseci")
                        .HasColumnType("int");

                    b.HasKey("LijekID");

                    b.ToTable("Lijek");
                });

            modelBuilder.Entity("Apoteka.Models.Apotekar", b =>
                {
                    b.HasOne("Apoteka.Models.Opstina", "MjestoRodjenja")
                        .WithMany()
                        .HasForeignKey("MjestoRodjenjaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
